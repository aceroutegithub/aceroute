Ext.AceRoute.view.LoginView=Ext.AceRoute.view.View.extend({id:"loginViewId",mainWindow:null,mainView:null,mainAppPanel:null,_controller:null,anchor:"50%",init:function(controller){this._super(controller);this._controller=controller;this.layout();},layout:function(){Ext.AceRoute.view.LoginPanel=Ext.extend(Ext.Panel,{id:"loginViewPanelId",fullscreen:true,layout:{type:"vbox",padding:"30",align:"left",width:"80%"},defaults:{margins:"10 50 10 10",pressed:false,allowDepress:false,labelAlign:"left"},accountNameId:undefined,userId:undefined,userPassCode:undefined,initComponent:function(){if(navigator.onLine){if(typeof Ext.AceRoute.isRememberUserPassCodeEnabled!=="undefined"&&Ext.AceRoute.isRememberUserPassCodeEnabled==1){this.accountNameId=localStorage.getItem("accountName");this.userId=localStorage.getItem("userId");this.userPassCode=localStorage.getItem("userPassCode");}var accountName={xtype:"textfield",id:"accountNameId",name:"accountName",label:"Account",width:"100%",cls:"cstFormLabelField",value:this.accountNameId,autoCapitalize:false,listeners:{keyup:{fn:function(srcElm,event){this.accountNameId=event.target.value;},scope:this}}};var userId={xtype:"textfield",id:"loginId",name:"loginId",label:"Mobile Id",width:"100%",cls:"cstFormLabelField",value:this.userId,autoCapitalize:false,listeners:{keyup:{fn:function(srcElm,event){this.userId=event.target.value;},scope:this}}};var userPassCode={xtype:"textfield",id:"passcode",name:"passcode",label:"Passcode",width:"100%",cls:"cstFormLabelField",value:this.userPassCode,autoCapitalize:false,listeners:{keyup:{fn:function(srcElm,event){this.userPassCode=event.target.value;},scope:this}}};var userPassCodeRemember={xtype:"togglefield",id:"passcodeRemember",name:"passcodeRemember",label:"Remember Me",cls:"cstFormLabelField",width:"100%",labelWidth:"50%",value:Ext.AceRoute.isRememberUserPassCodeEnabled,listeners:{change:{fn:function(slider,thumb,oldValue,newValue){if(oldValue==0&&newValue==1){Ext.AceRoute.isRememberUserPassCodeEnabled=0;}else{if(oldValue==1&&newValue==0){Ext.AceRoute.isRememberUserPassCodeEnabled=1;}}},scope:this}}};var loginButton=[{xtype:"button",text:"Login",iconMask:true,stretch:false,scope:this,handler:function(){if(typeof this.accountNameId!=="undefined"&&typeof this.userId!=="undefined"&&typeof this.userPassCode!=="undefined"){var el=Ext.getBody(),loginMask=new Ext.LoadMask(el,{msg:"Please wait..."});var ajaxUtil=new Ext.AceRoute.util.AjaxUtil();var textData=ajaxUtil.invokeUrlAndGetAsText(Ext.AceRoute.appUrl+"?action=mlogin"+"&nspace="+this.accountNameId+"&pcode="+this.userPassCode+"&res_id="+this.userId);doc=new DOMParser().parseFromString(textData,"text/xml");var successOrFailure=doc.childNodes[0].childNodes[0].childNodes[0].firstChild.data;console.log(" successOrFailure "+successOrFailure);if(successOrFailure!=="false"){var resId=doc.childNodes[0].childNodes[0].childNodes[0].firstChild.data;var loginRef=doc.childNodes[0].childNodes[0].childNodes[1].firstChild.data;Ext.AceRoute.resId=resId;Ext.AceRoute.loginref=loginRef;console.log(" Ext.AceRoute.resId "+Ext.AceRoute.resId);console.log(" Ext.AceRoute.loginref "+Ext.AceRoute.loginref);Ext.AceRoute.loginSuccessful="true";}else{Ext.AceRoute.loginSuccessful="false";var msg=new Ext.MessageBox({buttons:Ext.MessageBox.OKCANCEL,modal:true});msg.show({msg:"Login failed, please enter correct Account Name, User Id and Passcode."});}console.log(" Ext.AceRoute.resId 3 "+Ext.AceRoute.resId);if(typeof Ext.AceRoute.resId!=="undefined"&&typeof Ext.AceRoute.loginref!=="undefined"){console.log(" Ext.AceRoute.resId 2 "+Ext.AceRoute.resId);console.log(" Ext.AceRoute.loginref 2 "+Ext.AceRoute.loginref);localStorage.setItem("rememberUserPassCode",Ext.AceRoute.isRememberUserPassCodeEnabled);if(typeof Ext.AceRoute.isRememberUserPassCodeEnabled!=="undefined"&&Ext.AceRoute.isRememberUserPassCodeEnabled==1){localStorage.setItem("accountName",this.accountNameId);localStorage.setItem("userId",this.userId);localStorage.setItem("userPassCode",this.userPassCode);}else{localStorage.removeItem("accountName");localStorage.removeItem("userId");localStorage.removeItem("userPassCode");}loginPanel.hide();var initConfigService=new Ext.AceRoute.service.InitConfigService();console.log(" initConfigService starting...");initConfigService.startService();if(typeof initConfigService.serviceCompleted!=="undefined"&&initConfigService.serviceCompleted){console.log(" initConfigService start completed");}console.log(" Ext.AceRoute.initConfig.geoLocation.isEnabled "+Ext.AceRoute.initConfig.geoLocation.isEnabled);if(typeof Ext.AceRoute.initConfig.geoLocation.isEnabled!=="undefined"&&Ext.AceRoute.initConfig.geoLocation.isEnabled==0){console.log(" starting geoLocationService... ");var geoLocationService=new Ext.AceRoute.service.GeoLocationService();if(typeof geoLocationService.initialzed!=="undefined"&&geoLocationService.initialzed){if(navigator.geolocation){console.log(" starting geoLocationService 2... ");geoLocationService.startService();}}}var loginView=loginController.loginView;Ext.getCmp("loginViewPanelId").destroy();appController=new Ext.AceRoute.controller.AppController();}}else{var msg=new Ext.MessageBox({buttons:Ext.MessageBox.OKCANCEL,modal:true});msg.show({msg:"Please enter proper User Id and Passcode."});}}}];var cancelButton=[{xtype:"button",text:"Cancel",iconMask:true,stretch:false,scope:this,handler:function(event,btn){}}];var dockedItems=[new Ext.Toolbar({ui:"light",dock:"bottom",layout:{pack:"right"},items:[loginButton]})];var loginInnerPanel=new Ext.Panel({id:"orderMapId",name:"orderMap",title:"Map",defaults:{width:"135%",align:"left"},items:[{xtype:"spacer",flex:1},accountName,userId,userPassCode,userPassCodeRemember,{xtype:"panel",defaults:{width:"20%",align:"right"},items:[loginButton]}],listeners:{activate:{fn:function(){},scope:this}},});var loginHeaderTemplate=new Ext.XTemplate('<tpl for=".">',"<br/>",'<div class="x-field x-field-number x-label-align-left">','<div class="x-form-label" style="width: 115%; ">','<span><img class="logo" src="img/AceRoute_logo.png">'," <br/> Integrated Route & Work Order Management.",' <br/> <font size="3" bgcolor="#808080">Schedule. Optimize. Dispatch. Track.</font> </span>',"</div>","</div><br/>","</tpl>");var loginFooterTemplate=new Ext.XTemplate('<tpl for=".">','<br/><br/><div class="x-field mainLoginFooter x-field-number x-label-align-left">','<div class="x-form-label" style="width: 120%; ">','<span><font size="2" bgcolor="#808080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AceRoute Software Â©2011.</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>',"</div>","</div><br/>","</tpl>");console.log(" Ext.AceRoute.loginSuccessful "+Ext.AceRoute.loginSuccessful);if(typeof Ext.AceRoute.loginSuccessful!=="undefined"&&Ext.AceRoute.loginSuccessful!=="false"){console.log(" Ext.AceRoute.loginSuccessful 2 "+Ext.AceRoute.loginSuccessful);this.items=[loginHeaderTemplate,loginInnerPanel,loginFooterTemplate];}else{if(typeof Ext.AceRoute.loginSuccessful!=="undefined"){console.log(" Ext.AceRoute.loginSuccessful 3 "+Ext.AceRoute.loginSuccessful);var loginFailedMsg=new Ext.XTemplate('<tpl for=".">','<div class="x-field x-field-number x-label-align-left">','<div class="x-form-label" style="width: 120%; ">','<span><font size="1" bgcolor="red" color="red">Login Failed</font>&nbsp;&nbsp;</span>',"</div>","</div>","</tpl>");this.items=[loginHeaderTemplate,loginInnerPanel,loginFailedMsg,loginFooterTemplate];}else{this.items=[loginHeaderTemplate,loginInnerPanel,loginFooterTemplate];}}}else{this.on("render",function(){this.el.mask("No internet connection.");},this);}Ext.AceRoute.view.cfg={};Ext.AceRoute.view.cfg.shortUrl=this.shortUrl;Ext.AceRoute.view.cfg.title=this.title;Ext.AceRoute.view.LoginPanel.superclass.initComponent.call(this);}});var loginPanel=new Ext.AceRoute.view.LoginPanel();this.loginPanelRef=loginPanel;},repaint:function(){Ext.repaint();},setWindow:function(mWindow){_selfRefView.mainWindow=mWindow;},getWindow:function(){return _selfRefView.mainWindow;},setMainView:function(mScrollView){_selfRefView.mainView=mScrollView;},setAppMainPanel:function(mAppPanel){_selfRefView.mainAppPanel=mAppPanel;},getAppMainPanel:function(){return _selfRefView.mainAppPanel;},setMvcController:function(controller){this._controller=controller;}});